{"remainingRequest":"/Users/alex/Projects Sources/Elucidly/vue-3d-model-extend/node_modules/thread-loader/dist/cjs.js!/Users/alex/Projects Sources/Elucidly/vue-3d-model-extend/node_modules/babel-loader/lib/index.js!/Users/alex/Projects Sources/Elucidly/vue-3d-model-extend/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/alex/Projects Sources/Elucidly/vue-3d-model-extend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/alex/Projects Sources/Elucidly/vue-3d-model-extend/src/model-obj.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/alex/Projects Sources/Elucidly/vue-3d-model-extend/src/model-obj.vue","mtime":1638514315000},{"path":"/Users/alex/Projects Sources/Elucidly/vue-3d-model-extend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/alex/Projects Sources/Elucidly/vue-3d-model-extend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/alex/Projects Sources/Elucidly/vue-3d-model-extend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/alex/Projects Sources/Elucidly/vue-3d-model-extend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/alex/Projects Sources/Elucidly/vue-3d-model-extend/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/alex/Projects Sources/Elucidly/vue-3d-model-extend/babel.config.js","mtime":1638514315000},{"path":"/Users/alex/Projects Sources/Elucidly/vue-3d-model-extend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/alex/Projects Sources/Elucidly/vue-3d-model-extend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/alex/Projects Sources/Elucidly/vue-3d-model-extend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/alex/Projects Sources/Elucidly/vue-3d-model-extend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/alex/Projects Sources/Elucidly/vue-3d-model-extend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgeyBPQkpMb2FkZXIgfSBmcm9tICd0aHJlZS9leGFtcGxlcy9qc20vbG9hZGVycy9PQkpMb2FkZXInOwppbXBvcnQgeyBNVExMb2FkZXIgfSBmcm9tICd0aHJlZS9leGFtcGxlcy9qc20vbG9hZGVycy9NVExMb2FkZXInOwppbXBvcnQgeyBERFNMb2FkZXIgfSBmcm9tICd0aHJlZS9leGFtcGxlcy9qc20vbG9hZGVycy9ERFNMb2FkZXInOwppbXBvcnQgeyBMb2FkaW5nTWFuYWdlciB9IGZyb20gJ3RocmVlL3NyYy9sb2FkZXJzL0xvYWRpbmdNYW5hZ2VyJzsKaW1wb3J0IHsgdG9JbmRleGVkIH0gZnJvbSAnLi91dGlsJzsKaW1wb3J0IG1peGluIGZyb20gJy4vbW9kZWwtbWl4aW4udnVlJzsgLy8gVE9ETzogQmV0dGVyIHdheSB0byBoYW5kbGUgdGV4dHVyZSBmb3JtYXRzCgp2YXIgbWFuYWdlciA9IG5ldyBMb2FkaW5nTWFuYWdlcigpOyAvLyAwLjEyMisgbmV3IGFwaQoKbWFuYWdlci5hZGRIYW5kbGVyKC9cLmRkcyQvaSwgbmV3IEREU0xvYWRlcigpKTsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdtb2RlbC1vYmonLAogIG1peGluczogW21peGluXSwKICBwcm9wczogewogICAgbGlnaHRzOiB7CiAgICAgIHR5cGU6IEFycmF5LAogICAgICAiZGVmYXVsdCI6IGZ1bmN0aW9uIF9kZWZhdWx0KCkgewogICAgICAgIHJldHVybiBbewogICAgICAgICAgdHlwZTogJ0hlbWlzcGhlcmVMaWdodCcsCiAgICAgICAgICBwb3NpdGlvbjogewogICAgICAgICAgICB4OiAwLAogICAgICAgICAgICB5OiAxLAogICAgICAgICAgICB6OiAwCiAgICAgICAgICB9LAogICAgICAgICAgc2t5Q29sb3I6IDB4YWFhYWZmLAogICAgICAgICAgZ3JvdW5kQ29sb3I6IDB4ODA2MDYwLAogICAgICAgICAgaW50ZW5zaXR5OiAwLjIKICAgICAgICB9LCB7CiAgICAgICAgICB0eXBlOiAnRGlyZWN0aW9uYWxMaWdodCcsCiAgICAgICAgICBwb3NpdGlvbjogewogICAgICAgICAgICB4OiAxLAogICAgICAgICAgICB5OiAxLAogICAgICAgICAgICB6OiAxCiAgICAgICAgICB9LAogICAgICAgICAgY29sb3I6IDB4ZmZmZmZmLAogICAgICAgICAgaW50ZW5zaXR5OiAwLjgKICAgICAgICB9XTsKICAgICAgfQogICAgfSwKICAgIHNtb290aGluZzogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICAiZGVmYXVsdCI6IGZhbHNlCiAgICB9LAogICAgbXRsUGF0aDogewogICAgICB0eXBlOiBTdHJpbmcKICAgIH0sCiAgICBtdGw6IHsKICAgICAgdHlwZTogU3RyaW5nCiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgdmFyIG9iakxvYWRlciA9IG5ldyBPQkpMb2FkZXIobWFuYWdlcik7CiAgICB2YXIgbXRsTG9hZGVyID0gbmV3IE1UTExvYWRlcihtYW5hZ2VyKTsKICAgIG10bExvYWRlci5zZXRDcm9zc09yaWdpbih0aGlzLmNyb3NzT3JpZ2luKTsKICAgIG10bExvYWRlci5zZXRSZXF1ZXN0SGVhZGVyKHRoaXMucmVxdWVzdEhlYWRlcik7CiAgICBvYmpMb2FkZXIuc2V0UmVxdWVzdEhlYWRlcih0aGlzLnJlcXVlc3RIZWFkZXIpOwogICAgcmV0dXJuIHsKICAgICAgbG9hZGVyOiBvYmpMb2FkZXIsCiAgICAgIG10bExvYWRlcjogbXRsTG9hZGVyCiAgICB9OwogIH0sCiAgd2F0Y2g6IHsKICAgIG10bDogZnVuY3Rpb24gbXRsKCkgewogICAgICB0aGlzLmxvYWQoKTsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIHByb2Nlc3M6IGZ1bmN0aW9uIHByb2Nlc3Mob2JqZWN0KSB7CiAgICAgIGlmICh0aGlzLnNtb290aGluZykgewogICAgICAgIG9iamVjdC50cmF2ZXJzZShmdW5jdGlvbiAoY2hpbGQpIHsKICAgICAgICAgIGlmIChjaGlsZC5nZW9tZXRyeSkgewogICAgICAgICAgICBjaGlsZC5nZW9tZXRyeSA9IHRvSW5kZXhlZChjaGlsZC5nZW9tZXRyeSk7CiAgICAgICAgICAgIGNoaWxkLmdlb21ldHJ5LmNvbXB1dGVWZXJ0ZXhOb3JtYWxzKCk7CiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0sCiAgICBsb2FkOiBmdW5jdGlvbiBsb2FkKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgaWYgKCF0aGlzLnNyYykgcmV0dXJuOwoKICAgICAgaWYgKHRoaXMub2JqZWN0KSB7CiAgICAgICAgdGhpcy53cmFwcGVyLnJlbW92ZSh0aGlzLm9iamVjdCk7CiAgICAgIH0KCiAgICAgIHZhciBvbkxvYWQgPSBmdW5jdGlvbiBvbkxvYWQob2JqZWN0KSB7CiAgICAgICAgaWYgKF90aGlzLnByb2Nlc3MpIHsKICAgICAgICAgIF90aGlzLnByb2Nlc3Mob2JqZWN0KTsKICAgICAgICB9CgogICAgICAgIF90aGlzLmFkZE9iamVjdChvYmplY3QpOwoKICAgICAgICBfdGhpcy4kZW1pdCgnb24tbG9hZCcpOwogICAgICB9OwoKICAgICAgdmFyIG9uUHJvZ3Jlc3MgPSBmdW5jdGlvbiBvblByb2dyZXNzKHhocikgewogICAgICAgIF90aGlzLiRlbWl0KCdvbi1wcm9ncmVzcycsIHhocik7CiAgICAgIH07CgogICAgICB2YXIgb25FcnJvciA9IGZ1bmN0aW9uIG9uRXJyb3IoZXJyKSB7CiAgICAgICAgX3RoaXMuJGVtaXQoJ29uLWVycm9yJywgZXJyKTsKICAgICAgfTsKCiAgICAgIGlmICh0aGlzLm10bCkgewogICAgICAgIHZhciBtdGxQYXRoID0gdGhpcy5tdGxQYXRoOwogICAgICAgIHZhciBtdGxTcmMgPSB0aGlzLm10bDsKCiAgICAgICAgaWYgKCF0aGlzLm10bFBhdGgpIHsKICAgICAgICAgIHZhciByZXN1bHQgPSAvXiguKlwvKShbXi9dKikkLy5leGVjKHRoaXMubXRsKTsKCiAgICAgICAgICBpZiAocmVzdWx0KSB7CiAgICAgICAgICAgIG10bFBhdGggPSByZXN1bHRbMV07CiAgICAgICAgICAgIG10bFNyYyA9IHJlc3VsdFsyXTsKICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIGlmIChtdGxQYXRoKSB7CiAgICAgICAgICB0aGlzLm10bExvYWRlci5zZXRQYXRoKG10bFBhdGgpOwogICAgICAgIH0KCiAgICAgICAgdGhpcy5tdGxMb2FkZXIubG9hZChtdGxTcmMsIGZ1bmN0aW9uIChtYXRlcmlhbHMpIHsKICAgICAgICAgIG1hdGVyaWFscy5wcmVsb2FkKCk7CgogICAgICAgICAgX3RoaXMubG9hZGVyLnNldE1hdGVyaWFscyhtYXRlcmlhbHMpLmxvYWQoX3RoaXMuc3JjLCBvbkxvYWQsIG9uUHJvZ3Jlc3MsIG9uRXJyb3IpOwogICAgICAgIH0sIGZ1bmN0aW9uICgpIHt9LCBvbkVycm9yKTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLmxvYWRlci5sb2FkKHRoaXMuc3JjLCBvbkxvYWQsIG9uUHJvZ3Jlc3MsIG9uRXJyb3IpOwogICAgICB9CiAgICB9CiAgfQp9Ow=="},{"version":3,"mappings":";AACA;AACA;AACA;AACA;AACA;AACA,sC,CAEA;;AACA,mC,CAAA;;AACAA;AAEA;AACAC,mBADA;AAEAC,iBAFA;AAGAC;AACAC;AACAC,iBADA;AAAA,qCAEA;AACA,gBACA;AACAA,iCADA;AAEAC;AAAAC;AAAAC;AAAAC;AAAA,WAFA;AAGAC,4BAHA;AAIAC,+BAJA;AAKAC;AALA,SADA,EAQA;AACAP,kCADA;AAEAC;AAAAC;AAAAC;AAAAC;AAAA,WAFA;AAGAI,yBAHA;AAIAD;AAJA,SARA;AAeA;AAlBA,KADA;AAqBAE;AACAT,mBADA;AAEA;AAFA,KArBA;AAyBAU;AACAV;AADA,KAzBA;AA4BAW;AACAX;AADA;AA5BA,GAHA;AAmCAY,MAnCA,kBAmCA;AACA;AACA;AAEAC;AACAA;AACAC;AAEA;AACAC,uBADA;AAEAF;AAFA;AAIA,GA/CA;AAgDAG;AACAL,OADA,iBACA;AACA;AACA;AAHA,GAhDA;AAqDAM;AACAC,WADA,mBACAC,MADA,EACA;AACA;AACAA;AACA;AACAC;AACAA;AACA;AACA,SALA;AAMA;AACA,KAVA;AAWAC,QAXA,kBAWA;AAAA;;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,OARA;;AAUA;AACA;AACA,OAFA;;AAIA;AACA;AACA,OAFA;;AAIA;AACA;AACA;;AAEA;AACA;;AAEA;AACAX;AACAY;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACAC;;AAEA,uBACAC,YADA,CACAD,SADA,EAEAF,IAFA,CAEA,SAFA,EAEAI,MAFA,EAEAC,UAFA,EAEAC,OAFA;AAGA,SANA,EAMA,cANA,EAMAA,OANA;AAOA,OAxBA,MAwBA;AACA;AACA;AACA;AA/DA;AArDA","names":["manager","name","mixins","props","lights","type","position","x","y","z","skyColor","groundColor","intensity","color","smoothing","mtlPath","mtl","data","mtlLoader","objLoader","loader","watch","methods","process","object","child","load","mtlSrc","materials","setMaterials","onLoad","onProgress","onError"],"sourceRoot":"src","sources":["model-obj.vue"],"sourcesContent":["<script>\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader';\nimport { MTLLoader } from 'three/examples/jsm/loaders/MTLLoader';\nimport { DDSLoader } from 'three/examples/jsm/loaders/DDSLoader';\nimport { LoadingManager } from 'three/src/loaders/LoadingManager';\nimport { toIndexed } from './util';\nimport mixin from './model-mixin.vue';\n\n// TODO: Better way to handle texture formats\nconst manager = (new LoadingManager()); // 0.122+ new api\nmanager.addHandler(/\\.dds$/i, new DDSLoader());\n\nexport default {\n  name: 'model-obj',\n  mixins: [mixin],\n  props: {\n    lights: {\n      type: Array,\n      default() {\n        return [\n          {\n            type: 'HemisphereLight',\n            position: { x: 0, y: 1, z: 0 },\n            skyColor: 0xaaaaff,\n            groundColor: 0x806060,\n            intensity: 0.2,\n          },\n          {\n            type: 'DirectionalLight',\n            position: { x: 1, y: 1, z: 1 },\n            color: 0xffffff,\n            intensity: 0.8,\n          },\n        ];\n      },\n    },\n    smoothing: {\n      type: Boolean,\n      default: false,\n    },\n    mtlPath: {\n      type: String,\n    },\n    mtl: {\n      type: String,\n    },\n  },\n  data() {\n    const objLoader = new OBJLoader(manager);\n    const mtlLoader = new MTLLoader(manager);\n\n    mtlLoader.setCrossOrigin(this.crossOrigin);\n    mtlLoader.setRequestHeader(this.requestHeader);\n    objLoader.setRequestHeader(this.requestHeader);\n\n    return {\n      loader: objLoader,\n      mtlLoader,\n    };\n  },\n  watch: {\n    mtl() {\n      this.load();\n    },\n  },\n  methods: {\n    process(object) {\n      if (this.smoothing) {\n        object.traverse((child) => {\n          if (child.geometry) {\n            child.geometry = toIndexed(child.geometry);\n            child.geometry.computeVertexNormals();\n          }\n        });\n      }\n    },\n    load() {\n      if (!this.src) return;\n\n      if (this.object) {\n        this.wrapper.remove(this.object);\n      }\n\n      const onLoad = (object) => {\n        if (this.process) {\n          this.process(object);\n        }\n\n        this.addObject(object);\n\n        this.$emit('on-load');\n      };\n\n      const onProgress = (xhr) => {\n        this.$emit('on-progress', xhr);\n      };\n\n      const onError = (err) => {\n        this.$emit('on-error', err);\n      };\n\n      if (this.mtl) {\n        let { mtlPath } = this;\n        let mtlSrc = this.mtl;\n\n        if (!this.mtlPath) {\n          const result = /^(.*\\/)([^/]*)$/.exec(this.mtl);\n\n          if (result) {\n            mtlPath = result[1];\n            mtlSrc = result[2];\n          }\n        }\n\n        if (mtlPath) {\n          this.mtlLoader.setPath(mtlPath);\n        }\n\n        this.mtlLoader.load(mtlSrc, (materials) => {\n          materials.preload();\n\n          this.loader\n            .setMaterials(materials)\n            .load(this.src, onLoad, onProgress, onError);\n        }, () => {}, onError);\n      } else {\n        this.loader.load(this.src, onLoad, onProgress, onError);\n      }\n    },\n  },\n};\n</script>\n"]}]}