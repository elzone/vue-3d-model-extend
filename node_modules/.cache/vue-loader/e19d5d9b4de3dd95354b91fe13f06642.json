{"remainingRequest":"/Users/alex/Projects Sources/Elucidly/vue-3d-model-extend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/alex/Projects Sources/Elucidly/vue-3d-model-extend/examples/pages/demo-controls.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/alex/Projects Sources/Elucidly/vue-3d-model-extend/examples/pages/demo-controls.vue","mtime":1638514315000},{"path":"/Users/alex/Projects Sources/Elucidly/vue-3d-model-extend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/alex/Projects Sources/Elucidly/vue-3d-model-extend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/alex/Projects Sources/Elucidly/vue-3d-model-extend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/alex/Projects Sources/Elucidly/vue-3d-model-extend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/alex/Projects Sources/Elucidly/vue-3d-model-extend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmNvbnRyb2xzLWJ1dHRvbnMgewogIHdpZHRoOiAxMzBweDsKfQouY29udHJvbHMtYnV0dG9ucyA+IGJ1dHRvbiB7CiAgYmFja2dyb3VuZDogI2ZmZjsKICBwYWRkaW5nOiA0cHggNnB4OwogIG1hcmdpbi10b3A6IDVweDsKICBtYXJnaW4tbGVmdDogNHB4OwogIG91dGxpbmU6IG5vbmU7CiAgY3Vyc29yOiBwb2ludGVyOwogIGJvcmRlcjogMXB4IHNvbGlkICNjNGM0YzQ7Cn0K"},{"version":3,"sources":["demo-controls.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"demo-controls.vue","sourceRoot":"examples/pages","sourcesContent":["<template>\n  <demo-block :vue-code=\"code\" :html-code=\"htmlCode\">\n    <template slot=\"preview\">\n      <div class=\"controls-buttons\">\n        <button @click=\"toggle('pan')\">{{ enablePan ? 'disable' : 'enable' }} translation</button>\n        <button @click=\"toggle('zoom')\">{{ enableZoom ? 'disable' : 'enable' }} zoom</button>\n        <button @click=\"toggle('rotate')\">{{ enableRotate ? 'disable' : 'enable' }} rotation</button>\n      </div>\n      <model-obj\n        :backgroundAlpha=\"0\"\n        @on-load=\"onLoad\"\n        src=\"static/models/obj/tree.obj\"\n        :controlsOptions=\"{\n          enablePan,\n          enableZoom,\n          enableRotate,\n        }\"\n      ></model-obj>\n      <div class=\"example-loading\" v-show=\"loading\"></div>\n    </template>\n  </demo-block>\n</template>\n\n<style>\n.controls-buttons {\n  width: 130px;\n}\n.controls-buttons > button {\n  background: #fff;\n  padding: 4px 6px;\n  margin-top: 5px;\n  margin-left: 4px;\n  outline: none;\n  cursor: pointer;\n  border: 1px solid #c4c4c4;\n}\n</style>\n\n<script>\nimport DemoBlock from '../components/demo-block.vue';\nimport ModelObj from '../../src/model-obj.vue';\n\nconst code = `\n<template>\n    <div>\n        <div class=\"controls-buttons\">\n            <button @click=\"toggle('pan')\">{{ enablePan ? 'disable' : 'enable' }} translation</button>\n            <button @click=\"toggle('zoom')\">{{ enableZoom ? 'disable' : 'enable' }} zoom</button>\n            <button @click=\"toggle('rotate')\">{{ enableRotate ? 'disable' : 'enable' }} rotation</button>\n        </div>\n        <model-obj \n        src=\"static/models/obj/tree.obj\" \n        :controlsOptions=\"{\n          enablePan,\n          enableZoom,\n          enableRotate,\n        }\"\n        ></model-obj>\n    </div>\n</template>\n\n<script>\n    import { ModelObj } from 'vue-3d-model'\n\n    export default {\n        data() {\n            return {\n                enablePan: true,\n                enableZoom: true,\n                enableRotate: true,\n            }\n        },\n        methods: {\n            toggle(type) {\n                if (type === 'pan') this.enablePan = !this.enablePan;\n                if (type === 'zoom') this.enableZoom = !this.enableZoom;\n                if (type === 'rotate') this.enableRotate = !this.enableRotate;\n            }\n        },\n        components: {\n            ModelObj\n        }\n    }\n<\\/script>\n`;\n\nconst htmlCode = `\n<body>\n    <div id=\"app\">\n        <div class=\"controls-buttons\">\n            <button @click=\"toggle('pan')\">{{ enablePan ? 'disable' : 'enable' }} translation</button>\n            <button @click=\"toggle('zoom')\">{{ enableZoom ? 'disable' : 'enable' }} zoom</button>\n            <button @click=\"toggle('rotate')\">{{ enableRotate ? 'disable' : 'enable' }} rotation</button>\n        </div>\n        <model-obj \n          src=\"static/models/obj/tree.obj\"\n          :controlsOptions=\"{\n            enablePan,\n            enableZoom,\n            enableRotate,\n          }\"\n        ></model-obj>\n    </div>\n    #scripts#\n    <script>\n        new Vue({\n            el: '#app',\n            data() {\n                return {\n                    enablePan: true,\n                    enableZoom: true,\n                    enableRotate: true,\n                }\n            },\n            methods: {\n                toggle(type) {\n                    if (type === 'pan') this.enablePan = !this.enablePan;\n                    if (type === 'zoom') this.enableZoom = !this.enableZoom;\n                    if (type === 'rotate') this.enableRotate = !this.enableRotate;\n                }\n            },\n        })\n    <\\/script>\n</body>\n`;\n\nexport default {\n  name: 'demo-controls',\n  data() {\n    return {\n      code,\n      htmlCode,\n      loading: true,\n      enablePan: true,\n      enableZoom: true,\n      enableRotate: true,\n    };\n  },\n  methods: {\n    onLoad() {\n      this.loading = false;\n    },\n    toggle(type) {\n      if (type === 'pan') this.enablePan = !this.enablePan;\n      if (type === 'zoom') this.enableZoom = !this.enableZoom;\n      if (type === 'rotate') this.enableRotate = !this.enableRotate;\n    },\n  },\n  components: {\n    ModelObj,\n    DemoBlock,\n  },\n};\n</script>\n"]}]}